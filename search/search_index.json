{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Information: Example | Discord EnkaNetworkCard is a wrapper for enkanetwork.py that creates character card images. In Python. PyPi Thread version: enkanetworkcard PyPi Asynchronous version: aioenkanetworkcard Dependencies: Dependencies that must be installed for the library to work: Pillow requests io math threading datetime random enkanetwork logging asyncache cachetools","title":"Information"},{"location":"#information","text":"Example | Discord EnkaNetworkCard is a wrapper for enkanetwork.py that creates character card images. In Python. PyPi Thread version: enkanetworkcard PyPi Asynchronous version: aioenkanetworkcard","title":"Information:"},{"location":"#dependencies","text":"Dependencies that must be installed for the library to work: Pillow requests io math threading datetime random enkanetwork logging asyncache cachetools","title":"Dependencies:"},{"location":"Launch/async/","text":"Information: Example of running asynchronously: from aioenkanetworkcard import encbanner import asyncio async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = \"811455610\" ) return await encard . creat ( ENCpy , 1 ) result = asyncio . run ( card ()) print ( result )","title":"Launch"},{"location":"Launch/async/#information","text":"Example of running asynchronously: from aioenkanetworkcard import encbanner import asyncio async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = \"811455610\" ) return await encard . creat ( ENCpy , 1 ) result = asyncio . run ( card ()) print ( result )","title":"Information:"},{"location":"Launch/streaming/","text":"Information: Example of running Threads: from enkanetworkcard import encbanner import asyncio ENC = encbanner . EnkaGenshinGeneration () encR = asyncio . run ( ENC . enc ( uids = \"811455610\" )) result = ENC . start ( enc = encR ) print ( result )","title":"Launch"},{"location":"Launch/streaming/#information","text":"Example of running Threads: from enkanetworkcard import encbanner import asyncio ENC = encbanner . EnkaGenshinGeneration () encR = asyncio . run ( ENC . enc ( uids = \"811455610\" )) result = ENC . start ( enc = encR ) print ( result )","title":"Information:"},{"location":"async/Installation_Asynchronous_version/","text":"Information: This shows how to install the asynchronous version of enkanetworkcard, which is best suited for users using asynchrony. Install pip install aioenkanetworkcard Importing in code: from aioenkanetworkcard import encbanner","title":"Installation"},{"location":"async/Installation_Asynchronous_version/#information","text":"This shows how to install the asynchronous version of enkanetworkcard, which is best suited for users using asynchrony.","title":"Information:"},{"location":"async/Installation_Asynchronous_version/#install","text":"pip install aioenkanetworkcard","title":"Install"},{"location":"async/Installation_Asynchronous_version/#importing-in-code","text":"from aioenkanetworkcard import encbanner","title":"Importing in code:"},{"location":"async/Argument/documentation/","text":"Information: The EnkaGenshinGeneration class supports a number of arguments that customize the final version of the character card image. lang Takes one value to define the language. Supported languages are listed below in the documentation. The default is Russian. Example: EnkaGenshinGeneration ( lang = \"en\" ) Languages Supported: Languege Code Languege Code English en \u0440\u0443\u0441\u0441\u043a\u0438\u0439 ru Ti\u1ebfng Vi\u1ec7t vi \u0e44\u0e17\u0e22 th portugu\u00eas pt \ud55c\uad6d\uc5b4 kr \u65e5\u672c\u8a9e jp \u4e2d\u6587 zh \u4e2d\u6587 zh Indonesian id fran\u00e7ais fr espa\u00f1ol es deutsch de Taiwan cht Chinese chs img To transfer your image, which will be on the image card. Supports the following types: - Image link or the path to the file. - PIL.ImageFile: Image opened with Image.open() - list: Image link, the path to the file or PIL.ImageFile (list only works with the argument: randomImg ) Example: #Example str the path to the file: EnkaGenshinGeneration ( img = \"img.png\" ) #Example str image link: EnkaGenshinGeneration ( img = \"https//...image.png\" ) #Example PIL.ImageFile: EnkaGenshinGeneration ( img = Image . open ( \"img.png\" )) #Example list: EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" , \"https//...image.png\" ]) characterImgs: This argument can give each character card its own image. Takes the value: dict (Can take all values from the img argument except list.) Example: EnkaGenshinGeneration ( characterImgs = { \"Klee\" : Image . open ( \"img.png\" ), \"Albedo\" : \"img.png\" , \"Xiao\" : \"https//...image.png\" }) randomImg: Randomly select images from list of img argument. Example: EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" ], randomImg = True ) #If img is not a list, then randomImg is ignored. adapt: Adapt the background to the custom image passed in the img argument. Example: EnkaGenshinGeneration ( img = \"img.png\" , adapt = True ) splashArt: If the character is wearing a costume, then their splashes will be available in costumes. Example: EnkaGenshinGeneration ( splashArt = True ) nameCards: Replaces the background of the player card image with character images. (Used only for the second template.) Example: EnkaGenshinGeneration ( nameCards = True ) save: If specified, it will save the finished results to the AioEnkaImg directory Example: EnkaGenshinGeneration ( save = True ) characterName: Generates only cards of the specified characters. Example: #Example str one character: EnkaGenshinGeneration ( characterName = \"Klee\" ) #Example str two or more characters: EnkaGenshinGeneration . start ( uids = \"757562748\" , characterName = \"Klee, Albedo, ...\" ) hide: Should the player's UID be displayed? Example: EnkaGenshinGeneration ( hide = False )","title":"hide"},{"location":"async/Argument/documentation/#information","text":"The EnkaGenshinGeneration class supports a number of arguments that customize the final version of the character card image.","title":"Information:"},{"location":"async/Argument/documentation/#lang","text":"Takes one value to define the language. Supported languages are listed below in the documentation. The default is Russian.","title":"lang"},{"location":"async/Argument/documentation/#example","text":"EnkaGenshinGeneration ( lang = \"en\" )","title":"Example:"},{"location":"async/Argument/documentation/#languages-supported","text":"Languege Code Languege Code English en \u0440\u0443\u0441\u0441\u043a\u0438\u0439 ru Ti\u1ebfng Vi\u1ec7t vi \u0e44\u0e17\u0e22 th portugu\u00eas pt \ud55c\uad6d\uc5b4 kr \u65e5\u672c\u8a9e jp \u4e2d\u6587 zh \u4e2d\u6587 zh Indonesian id fran\u00e7ais fr espa\u00f1ol es deutsch de Taiwan cht Chinese chs","title":"Languages Supported:"},{"location":"async/Argument/documentation/#img","text":"To transfer your image, which will be on the image card. Supports the following types: - Image link or the path to the file. - PIL.ImageFile: Image opened with Image.open() - list: Image link, the path to the file or PIL.ImageFile (list only works with the argument: randomImg )","title":"img"},{"location":"async/Argument/documentation/#example_1","text":"#Example str the path to the file: EnkaGenshinGeneration ( img = \"img.png\" ) #Example str image link: EnkaGenshinGeneration ( img = \"https//...image.png\" ) #Example PIL.ImageFile: EnkaGenshinGeneration ( img = Image . open ( \"img.png\" )) #Example list: EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" , \"https//...image.png\" ])","title":"Example:"},{"location":"async/Argument/documentation/#characterimgs","text":"This argument can give each character card its own image. Takes the value: dict (Can take all values from the img argument except list.)","title":"characterImgs:"},{"location":"async/Argument/documentation/#example_2","text":"EnkaGenshinGeneration ( characterImgs = { \"Klee\" : Image . open ( \"img.png\" ), \"Albedo\" : \"img.png\" , \"Xiao\" : \"https//...image.png\" })","title":"Example:"},{"location":"async/Argument/documentation/#randomimg","text":"Randomly select images from list of img argument.","title":"randomImg:"},{"location":"async/Argument/documentation/#example_3","text":"EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" ], randomImg = True ) #If img is not a list, then randomImg is ignored.","title":"Example:"},{"location":"async/Argument/documentation/#adapt","text":"Adapt the background to the custom image passed in the img argument.","title":"adapt:"},{"location":"async/Argument/documentation/#example_4","text":"EnkaGenshinGeneration ( img = \"img.png\" , adapt = True )","title":"Example:"},{"location":"async/Argument/documentation/#splashart","text":"If the character is wearing a costume, then their splashes will be available in costumes.","title":"splashArt:"},{"location":"async/Argument/documentation/#example_5","text":"EnkaGenshinGeneration ( splashArt = True )","title":"Example:"},{"location":"async/Argument/documentation/#namecards","text":"Replaces the background of the player card image with character images. (Used only for the second template.)","title":"nameCards:"},{"location":"async/Argument/documentation/#example_6","text":"EnkaGenshinGeneration ( nameCards = True )","title":"Example:"},{"location":"async/Argument/documentation/#save","text":"If specified, it will save the finished results to the AioEnkaImg directory","title":"save:"},{"location":"async/Argument/documentation/#example_7","text":"EnkaGenshinGeneration ( save = True )","title":"Example:"},{"location":"async/Argument/documentation/#charactername","text":"Generates only cards of the specified characters.","title":"characterName:"},{"location":"async/Argument/documentation/#example_8","text":"#Example str one character: EnkaGenshinGeneration ( characterName = \"Klee\" ) #Example str two or more characters: EnkaGenshinGeneration . start ( uids = \"757562748\" , characterName = \"Klee, Albedo, ...\" )","title":"Example:"},{"location":"async/Argument/documentation/#hide","text":"Should the player's UID be displayed?","title":"hide:"},{"location":"async/Argument/documentation/#example_9","text":"EnkaGenshinGeneration ( hide = False )","title":"Example:"},{"location":"async/Functions/enc/","text":"Information: Enc - An asynchronous function that returns the result of executing enkanetwork.py in the required format for further passing it as an argument to the functions of the EnkaNetworkCard class: start , profile Enc: Takes an uids argument. uids - Can be a single number/string or a string containing multiple player uids separated by commas. Asynchronous/Threaded: If you are using the asynchronous version, then it is enough to call it with await, if you are using the threaded version, then you need to call it via asyncio.run() Example: # Example one uids: from aioenkanetworkcard import encbanner async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = 757562748 ) print ( ENCpy ) #Example one or more uids: from aioenkanetworkcard import encbanner async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = \"757562748,757562749,...\" ) print ( ENCpy ) Result: { \"757562748\" : { enkanetwork . py_object }, \"757562749\" : enkanetwork . py_object , ... }","title":"enc"},{"location":"async/Functions/enc/#information","text":"Enc - An asynchronous function that returns the result of executing enkanetwork.py in the required format for further passing it as an argument to the functions of the EnkaNetworkCard class: start , profile","title":"Information:"},{"location":"async/Functions/enc/#enc","text":"Takes an uids argument. uids - Can be a single number/string or a string containing multiple player uids separated by commas.","title":"Enc:"},{"location":"async/Functions/enc/#asynchronousthreaded","text":"If you are using the asynchronous version, then it is enough to call it with await, if you are using the threaded version, then you need to call it via asyncio.run()","title":"Asynchronous/Threaded:"},{"location":"async/Functions/enc/#example","text":"# Example one uids: from aioenkanetworkcard import encbanner async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = 757562748 ) print ( ENCpy ) #Example one or more uids: from aioenkanetworkcard import encbanner async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = \"757562748,757562749,...\" ) print ( ENCpy )","title":"Example:"},{"location":"async/Functions/enc/#result","text":"{ \"757562748\" : { enkanetwork . py_object }, \"757562749\" : enkanetwork . py_object , ... }","title":"Result:"},{"location":"async/Functions/profile/","text":"Information: A useful feature for bot developers. Get information about the characters from the showcase, for their further use. Requires ENC This function requires an enc() argument that must be obtained from the enc function Profile: It takes enc and image argument. enc - The result returned by the EnkaGenshinGeneration().enc() function image - Generate a profile picture or not. Example from aioenkanetworkcard import encbanner async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = 757562748 ) profile = await encard . profile ( enc = ENCpy ) print ( profile ) Result: { \"characters\" : { \"name_charter\" : { ... }, \"charactersArg\" : { \"name1\" , \"name2\" , .. }, img : ... } characters - Information about each character. charactersArg - List of character names to quickly pass to start() img - Showcase generated image.","title":"profile"},{"location":"async/Functions/profile/#information","text":"A useful feature for bot developers. Get information about the characters from the showcase, for their further use. Requires ENC This function requires an enc() argument that must be obtained from the enc function","title":"Information:"},{"location":"async/Functions/profile/#profile","text":"It takes enc and image argument. enc - The result returned by the EnkaGenshinGeneration().enc() function image - Generate a profile picture or not.","title":"Profile:"},{"location":"async/Functions/profile/#example","text":"from aioenkanetworkcard import encbanner async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = 757562748 ) profile = await encard . profile ( enc = ENCpy ) print ( profile )","title":"Example"},{"location":"async/Functions/profile/#result","text":"{ \"characters\" : { \"name_charter\" : { ... }, \"charactersArg\" : { \"name1\" , \"name2\" , .. }, img : ... } characters - Information about each character. charactersArg - List of character names to quickly pass to start() img - Showcase generated image.","title":"Result:"},{"location":"async/Functions/start/","text":"Information: The main function to start generating character card images. Requires ENC This function requires an enc() argument that must be obtained from the enc function Start: It takes enc and template argument. enc - The result returned by the EnkaGenshinGeneration().enc() function template - Choosing a template to create a character card. There are 3 in total. (Template examples can be found here: template ) Async example: from aioenkanetworkcard import encbanner import asyncio def card (): async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = \"811455610\" ) return await encard . creat ( ENCpy , 1 ) print ( asyncio . run ( card ())) Result: >> { \"uid\" : { \"name_charter1\" : \"PillImage.Image\" , \"name_charter2\" : \"PillImage.Image\" , ... }, ... } Result save = True In the directory of the executable file, a special folder AioEnkaImage will be created where the finished images will be saved.","title":"start"},{"location":"async/Functions/start/#information","text":"The main function to start generating character card images. Requires ENC This function requires an enc() argument that must be obtained from the enc function","title":"Information:"},{"location":"async/Functions/start/#start","text":"It takes enc and template argument. enc - The result returned by the EnkaGenshinGeneration().enc() function template - Choosing a template to create a character card. There are 3 in total. (Template examples can be found here: template )","title":"Start:"},{"location":"async/Functions/start/#async-example","text":"from aioenkanetworkcard import encbanner import asyncio def card (): async with encbanner . ENC () as encard : ENCpy = await encard . enc ( uids = \"811455610\" ) return await encard . creat ( ENCpy , 1 ) print ( asyncio . run ( card ()))","title":"Async example:"},{"location":"async/Functions/start/#result","text":">> { \"uid\" : { \"name_charter1\" : \"PillImage.Image\" , \"name_charter2\" : \"PillImage.Image\" , ... }, ... } Result save = True In the directory of the executable file, a special folder AioEnkaImage will be created where the finished images will be saved.","title":"Result:"},{"location":"async/Other/additionally/","text":"Updating enkanetwork.py data: from aioenkanetworkcard import upload await upload () Template example: The result of a custom images and adaptation (template= 1). Usual result (template= 1). The result of a custom images and adaptation (template= 2). Usual result (template= 2). Usual result (template= 3).","title":"Additionally"},{"location":"async/Other/additionally/#updating-enkanetworkpy-data","text":"from aioenkanetworkcard import upload await upload ()","title":"Updating enkanetwork.py data:"},{"location":"async/Other/additionally/#template-example","text":"","title":"Template example:"},{"location":"async/Other/additionally/#the-result-of-a-custom-images-and-adaptation-template-1","text":"","title":"The result of a custom images and adaptation (template= 1)."},{"location":"async/Other/additionally/#usual-result-template-1","text":"","title":"Usual result (template= 1)."},{"location":"async/Other/additionally/#the-result-of-a-custom-images-and-adaptation-template-2","text":"","title":"The result of a custom images and adaptation (template= 2)."},{"location":"async/Other/additionally/#usual-result-template-2","text":"","title":"Usual result (template= 2)."},{"location":"async/Other/additionally/#usual-result-template-3","text":"","title":"Usual result (template= 3)."},{"location":"synh/Installation_Streaming_version/","text":"Information: This shows how to install the threaded version of enkanetworkcard, which is better for users who don't use async. Install pip install enkanetworkcard Importing in code: from enkanetworkcard import encbanner","title":"Installation"},{"location":"synh/Installation_Streaming_version/#information","text":"This shows how to install the threaded version of enkanetworkcard, which is better for users who don't use async.","title":"Information:"},{"location":"synh/Installation_Streaming_version/#install","text":"pip install enkanetworkcard","title":"Install"},{"location":"synh/Installation_Streaming_version/#importing-in-code","text":"from enkanetworkcard import encbanner","title":"Importing in code:"},{"location":"synh/Argument/documentation/","text":"Information: The EnkaGenshinGeneration class supports a number of arguments that customize the final version of the character card image. lang Takes one value to define the language. Supported languages are listed below in the documentation. The default is Russian. Example: EnkaGenshinGeneration ( lang = \"en\" ) Languages Supported: Languege Code Languege Code English en \u0440\u0443\u0441\u0441\u043a\u0438\u0439 ru Ti\u1ebfng Vi\u1ec7t vi \u0e44\u0e17\u0e22 th portugu\u00eas pt \ud55c\uad6d\uc5b4 kr \u65e5\u672c\u8a9e jp \u4e2d\u6587 zh \u4e2d\u6587 zh Indonesian id fran\u00e7ais fr espa\u00f1ol es deutsch de Taiwan cht Chinese chs img To transfer your image, which will be on the image card. Supports the following types: - Image link or the path to the file. - PIL.ImageFile: Image opened with Image.open() - list: Image link, the path to the file or PIL.ImageFile (list only works with the argument: randomImg ) Example: #Example str the path to the file: EnkaGenshinGeneration ( img = \"img.png\" ) #Example str image link: EnkaGenshinGeneration ( img = \"https//...image.png\" ) #Example PIL.ImageFile: EnkaGenshinGeneration ( img = Image . open ( \"img.png\" )) #Example list: EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" , \"https//...image.png\" ]) charterImg: This argument can give each character card its own image. Takes the value: dict (Can take all values from the img argument except list.) Example: EnkaGenshinGeneration ( charterImg = { \"Klee\" : Image . open ( \"img.png\" ), \"Albedo\" : \"img.png\" , \"Xiao\" : \"https//...image.png\" }) randomImg: Randomly select images from list of img argument. Example: EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" ], randomImg = True ) #If img is not a list, then randomImg is ignored. adapt: Adapt the background to the custom image passed in the img argument. Example: EnkaGenshinGeneration ( img = \"img.png\" , adapt = True ) splash: If the character is wearing a costume, then their splashes will be available in costumes. Example: EnkaGenshinGeneration ( splash = True ) namecard: Replaces the background of the player card image with character images. (Used only for the second template.) Example: EnkaGenshinGeneration ( namecard = True ) dowload: Will return ready images for further work with them. (If not specified, then the finished results will be saved in the directory of the executable file in the folder EnkaImg and return None: ) Example: EnkaGenshinGeneration ( dowload = True ) name: Generates only cards of the specified characters. Example: #Example str one character: EnkaGenshinGeneration ( name = \"Klee\" ) #Example str two or more characters: EnkaGenshinGeneration . start ( uids = \"757562748\" , name = \"Klee, Albedo, ...\" ) hide: Should the player's UID be displayed? Example: EnkaGenshinGeneration ( hide = False )","title":"hide"},{"location":"synh/Argument/documentation/#information","text":"The EnkaGenshinGeneration class supports a number of arguments that customize the final version of the character card image.","title":"Information:"},{"location":"synh/Argument/documentation/#lang","text":"Takes one value to define the language. Supported languages are listed below in the documentation. The default is Russian.","title":"lang"},{"location":"synh/Argument/documentation/#example","text":"EnkaGenshinGeneration ( lang = \"en\" )","title":"Example:"},{"location":"synh/Argument/documentation/#languages-supported","text":"Languege Code Languege Code English en \u0440\u0443\u0441\u0441\u043a\u0438\u0439 ru Ti\u1ebfng Vi\u1ec7t vi \u0e44\u0e17\u0e22 th portugu\u00eas pt \ud55c\uad6d\uc5b4 kr \u65e5\u672c\u8a9e jp \u4e2d\u6587 zh \u4e2d\u6587 zh Indonesian id fran\u00e7ais fr espa\u00f1ol es deutsch de Taiwan cht Chinese chs","title":"Languages Supported:"},{"location":"synh/Argument/documentation/#img","text":"To transfer your image, which will be on the image card. Supports the following types: - Image link or the path to the file. - PIL.ImageFile: Image opened with Image.open() - list: Image link, the path to the file or PIL.ImageFile (list only works with the argument: randomImg )","title":"img"},{"location":"synh/Argument/documentation/#example_1","text":"#Example str the path to the file: EnkaGenshinGeneration ( img = \"img.png\" ) #Example str image link: EnkaGenshinGeneration ( img = \"https//...image.png\" ) #Example PIL.ImageFile: EnkaGenshinGeneration ( img = Image . open ( \"img.png\" )) #Example list: EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" , \"https//...image.png\" ])","title":"Example:"},{"location":"synh/Argument/documentation/#charterimg","text":"This argument can give each character card its own image. Takes the value: dict (Can take all values from the img argument except list.)","title":"charterImg:"},{"location":"synh/Argument/documentation/#example_2","text":"EnkaGenshinGeneration ( charterImg = { \"Klee\" : Image . open ( \"img.png\" ), \"Albedo\" : \"img.png\" , \"Xiao\" : \"https//...image.png\" })","title":"Example:"},{"location":"synh/Argument/documentation/#randomimg","text":"Randomly select images from list of img argument.","title":"randomImg:"},{"location":"synh/Argument/documentation/#example_3","text":"EnkaGenshinGeneration ( img = [ Image . open ( \"img.png\" ), \"img.png\" ], randomImg = True ) #If img is not a list, then randomImg is ignored.","title":"Example:"},{"location":"synh/Argument/documentation/#adapt","text":"Adapt the background to the custom image passed in the img argument.","title":"adapt:"},{"location":"synh/Argument/documentation/#example_4","text":"EnkaGenshinGeneration ( img = \"img.png\" , adapt = True )","title":"Example:"},{"location":"synh/Argument/documentation/#splash","text":"If the character is wearing a costume, then their splashes will be available in costumes.","title":"splash:"},{"location":"synh/Argument/documentation/#example_5","text":"EnkaGenshinGeneration ( splash = True )","title":"Example:"},{"location":"synh/Argument/documentation/#namecard","text":"Replaces the background of the player card image with character images. (Used only for the second template.)","title":"namecard:"},{"location":"synh/Argument/documentation/#example_6","text":"EnkaGenshinGeneration ( namecard = True )","title":"Example:"},{"location":"synh/Argument/documentation/#dowload","text":"Will return ready images for further work with them. (If not specified, then the finished results will be saved in the directory of the executable file in the folder EnkaImg and return None: )","title":"dowload:"},{"location":"synh/Argument/documentation/#example_7","text":"EnkaGenshinGeneration ( dowload = True )","title":"Example:"},{"location":"synh/Argument/documentation/#name","text":"Generates only cards of the specified characters.","title":"name:"},{"location":"synh/Argument/documentation/#example_8","text":"#Example str one character: EnkaGenshinGeneration ( name = \"Klee\" ) #Example str two or more characters: EnkaGenshinGeneration . start ( uids = \"757562748\" , name = \"Klee, Albedo, ...\" )","title":"Example:"},{"location":"synh/Argument/documentation/#hide","text":"Should the player's UID be displayed?","title":"hide:"},{"location":"synh/Argument/documentation/#example_9","text":"EnkaGenshinGeneration ( hide = False )","title":"Example:"},{"location":"synh/Functions/enc/","text":"Information: Enc - An asynchronous function that returns the result of executing enkanetwork.py in the required format for further passing it as an argument to the functions of the EnkaNetworkCard class: start , profile Enc: Takes an uids argument. uids - Can be a single number/string or a string containing multiple player uids separated by commas. Asynchronous/Threaded: If you are using the asynchronous version, then it is enough to call it with await, if you are using the threaded version, then you need to call it via asyncio.run() Example: # Example one uids: encR = await EnkaGenshinGeneration ( uids = 757562748 ) #Example one or more uids: encR = await ENC ( uids = \"757562748,757562749,...\" ) Result: { \"757562748\" : { enkanetwork . py_object }, \"757562749\" : enkanetwork . py_object , ... }","title":"enc"},{"location":"synh/Functions/enc/#information","text":"Enc - An asynchronous function that returns the result of executing enkanetwork.py in the required format for further passing it as an argument to the functions of the EnkaNetworkCard class: start , profile","title":"Information:"},{"location":"synh/Functions/enc/#enc","text":"Takes an uids argument. uids - Can be a single number/string or a string containing multiple player uids separated by commas.","title":"Enc:"},{"location":"synh/Functions/enc/#asynchronousthreaded","text":"If you are using the asynchronous version, then it is enough to call it with await, if you are using the threaded version, then you need to call it via asyncio.run()","title":"Asynchronous/Threaded:"},{"location":"synh/Functions/enc/#example","text":"# Example one uids: encR = await EnkaGenshinGeneration ( uids = 757562748 ) #Example one or more uids: encR = await ENC ( uids = \"757562748,757562749,...\" )","title":"Example:"},{"location":"synh/Functions/enc/#result","text":"{ \"757562748\" : { enkanetwork . py_object }, \"757562749\" : enkanetwork . py_object , ... }","title":"Result:"},{"location":"synh/Functions/profile/","text":"Information: A useful feature for bot developers. Get information about the characters from the showcase, for their further use. Requires ENC This function requires an enc() argument that must be obtained from the enc function Profile: It takes enc and image argument. enc - The result returned by the EnkaGenshinGeneration().enc() function image - Generate a profile picture or not. Example from enkanetworkcard import encbanner import asyncio ENC = encbanner . EnkaGenshinGeneration () encR = asyncio . run ( ENC . enc ( uids = \"811455610\" )) resultProfile = ENC . profile ( enc = encR , image = False ) print ( resultProfile ) Result: { \"characters\" : { \"name_charter\" : { ... }, \"charactersArg\" : { \"name1\" , \"name2\" , .. }, img : ... } characters - Information about each character. charactersArg - List of character names to quickly pass to start() img - Showcase generated image.","title":"profile"},{"location":"synh/Functions/profile/#information","text":"A useful feature for bot developers. Get information about the characters from the showcase, for their further use. Requires ENC This function requires an enc() argument that must be obtained from the enc function","title":"Information:"},{"location":"synh/Functions/profile/#profile","text":"It takes enc and image argument. enc - The result returned by the EnkaGenshinGeneration().enc() function image - Generate a profile picture or not.","title":"Profile:"},{"location":"synh/Functions/profile/#example","text":"from enkanetworkcard import encbanner import asyncio ENC = encbanner . EnkaGenshinGeneration () encR = asyncio . run ( ENC . enc ( uids = \"811455610\" )) resultProfile = ENC . profile ( enc = encR , image = False ) print ( resultProfile )","title":"Example"},{"location":"synh/Functions/profile/#result","text":"{ \"characters\" : { \"name_charter\" : { ... }, \"charactersArg\" : { \"name1\" , \"name2\" , .. }, img : ... } characters - Information about each character. charactersArg - List of character names to quickly pass to start() img - Showcase generated image.","title":"Result:"},{"location":"synh/Functions/start/","text":"Information: The main function to start generating character card images. Requires ENC This function requires an enc() argument that must be obtained from the enc function Start: It takes enc and template argument. enc - The result returned by the EnkaGenshinGeneration().enc() function template - Choosing a template to create a character card. There are 3 in total. (Template examples can be found here: template ) Thread example: from enkanetworkcard import encbanner import asyncio ENC = encbanner . EnkaGenshinGeneration () encR = asyncio . run ( ENC . enc ( uids = \"811455610\" )) resultProfile = ENC . start ( enc = encR , teample = 3 ) print ( resultProfile ) Result: If you specified download = True: >> { \"uid\" : { \"name_charter1\" : \"PillImage.Image\" , \"name_charter2\" : \"PillImage.Image\" , ... }, ... } If you specified download = False: >> None Result download = False In the directory of the executable file, a special folder EnkaImage / AioEnkaImage will be created where the finished images will be saved.","title":"start"},{"location":"synh/Functions/start/#information","text":"The main function to start generating character card images. Requires ENC This function requires an enc() argument that must be obtained from the enc function","title":"Information:"},{"location":"synh/Functions/start/#start","text":"It takes enc and template argument. enc - The result returned by the EnkaGenshinGeneration().enc() function template - Choosing a template to create a character card. There are 3 in total. (Template examples can be found here: template )","title":"Start:"},{"location":"synh/Functions/start/#thread-example","text":"from enkanetworkcard import encbanner import asyncio ENC = encbanner . EnkaGenshinGeneration () encR = asyncio . run ( ENC . enc ( uids = \"811455610\" )) resultProfile = ENC . start ( enc = encR , teample = 3 ) print ( resultProfile )","title":"Thread example:"},{"location":"synh/Functions/start/#result","text":"","title":"Result:"},{"location":"synh/Functions/start/#if-you-specified-download-true","text":">> { \"uid\" : { \"name_charter1\" : \"PillImage.Image\" , \"name_charter2\" : \"PillImage.Image\" , ... }, ... }","title":"If you specified download = True:"},{"location":"synh/Functions/start/#if-you-specified-download-false","text":">> None Result download = False In the directory of the executable file, a special folder EnkaImage / AioEnkaImage will be created where the finished images will be saved.","title":"If you specified download = False:"},{"location":"synh/Other/additionally/","text":"Fix bug with async: Windows users may experience an error: RuntimeError: Event loop is closed if this occurs, then you must set the variable FIX_ASYNCIO_WIN = True Example from enkanetworkcard import encbanner ENC = encbanner . EnkaGenshinGeneration () ENC . FIX_ASYNCIO_WIN = True Updating enkanetwork.py data: from enkanetworkcard import upload upload () Template example: The result of a custom images and adaptation (template= 1). Usual result (template= 1). The result of a custom images and adaptation (template= 2). Usual result (template= 2). Usual result (template= 3).","title":"Additionally"},{"location":"synh/Other/additionally/#fix-bug-with-async","text":"Windows users may experience an error: RuntimeError: Event loop is closed if this occurs, then you must set the variable FIX_ASYNCIO_WIN = True","title":"Fix bug with async:"},{"location":"synh/Other/additionally/#example","text":"from enkanetworkcard import encbanner ENC = encbanner . EnkaGenshinGeneration () ENC . FIX_ASYNCIO_WIN = True","title":"Example"},{"location":"synh/Other/additionally/#updating-enkanetworkpy-data","text":"from enkanetworkcard import upload upload ()","title":"Updating enkanetwork.py data:"},{"location":"synh/Other/additionally/#template-example","text":"","title":"Template example:"},{"location":"synh/Other/additionally/#the-result-of-a-custom-images-and-adaptation-template-1","text":"","title":"The result of a custom images and adaptation (template= 1)."},{"location":"synh/Other/additionally/#usual-result-template-1","text":"","title":"Usual result (template= 1)."},{"location":"synh/Other/additionally/#the-result-of-a-custom-images-and-adaptation-template-2","text":"","title":"The result of a custom images and adaptation (template= 2)."},{"location":"synh/Other/additionally/#usual-result-template-2","text":"","title":"Usual result (template= 2)."},{"location":"synh/Other/additionally/#usual-result-template-3","text":"","title":"Usual result (template= 3)."}]}